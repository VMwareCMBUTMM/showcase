formatVersion: 1
name: MOAD VCF-NSX
version: 4
inputs:
  frontendcount:
    title: 'No. of Frontend Workloads:'
    type: integer
    default: 1
    description: Load Balancer will be deployed <br> if Frontend Workload count <br> is >= 2
  env:
    type: string
    description: Target Environment
    title: Target Environment
    oneOf:
      - title: VCF (VMware Cloud Foundation)
        const: env:vcf
  username:
    type: string
    description: The username you would like to have for the installation.
    default: demouser
    title: System Admin Account Username
  password:
    type: string
    description: The password you would like to use for the ocuser account.
    title: OpenCart Admin Account Password
    default: VMware1!
    pattern: '[a-z0-9A-Z@#$]+'
    encrypted: true
  costCenter:
    type: string
    enum:
      - engineering
      - operations
    description: Select the appropiate Cost Center.
    default: engineering
    title: Cost Center
  osMonitoring:
    type: boolean
    title: Enable OS/APP Monitoring
    description: Installs the Telegraf Agent and monitors both MYSQL and Apache Apps
  tagsOptional:
    comment: |
      # Tag Pattern: Only hyphens (-), underscores (_), lowercase characters, and 
      # numbers are allowed. Keys must start with a lowercase character. Pattern is cloud agnostic 
    encrypted: true
    type: array
    description: |-
      <b> Enter tags that will be attached to the provisioned resources. </b> <br>
      Allowed characters for cloud agnostic blueprints:  <br>
      Only hyphens (-), underscores (_), lowercase characters, and numbers are allowed. <br>
    title: Optional Tags
    items:
      type: object
      properties:
        key:
          type: string
          title: Key
          description: Only hyphens (-), underscores (_), lowercase characters, and numbers are allowed.
          pattern: ^[-a-z0-9\-\_]*$
        value:
          type: string
          title: Value
          description: Only hyphens (-), underscores (_), lowercase characters, and numbers are allowed.
          pattern: ^[-a-z0-9\-\_]*$
  tagsRequired:
    comment: |
      # Tag Pattern: Only hyphens (-), underscores (_), lowercase characters, and 
      # numbers are allowed. Keys must start with a lowercase character. Pattern is cloud agnostic 
    type: array
    description: |-
      <b> Required tags that will be attached to the provisioned resources. </b> <br>
      Allowed characters for cloud agnostic blueprints:  <br>
      Only hyphens (-), underscores (_), lowercase characters, and numbers are allowed. <br>
    default:
      - key: application
        value: shopping_cart
    title: Required Tags
    pattern: null
    items:
      type: object
      properties:
        key:
          type: string
          title: Key
          description: Only hyphens (-), underscores (_), lowercase characters, and numbers are allowed.
          pattern: ^[-a-z0-9\-\_]*$
        value:
          type: string
          title: Value
          description: Only hyphens (-), underscores (_), lowercase characters, and numbers are allowed.
          pattern: ^[-a-z0-9\-\_]*$
    readOnly: true
resources:
  OC-Apache-Cloud-Sec-Grp:
    type: Cloud.SecurityGroup
    properties:
      securityGroupType: new
      rules:
        - name: oc-web-fw-http
          ports: 80
          direction: inbound
          protocol: TCP
          source: ANY
          access: Allow
        - name: oc-web-fw-ssh
          ports: 22
          direction: inbound
          protocol: TCP
          source: ANY
          access: Allow
  OC-MySQL-Cloud-Sec-Grp:
    type: Cloud.SecurityGroup
    properties:
      securityGroupType: new
      rules:
        - name: oc-db-fw-mysql
          ports: '3306'
          access: Allow
          source: ${resource["OC-Apache-Cloud-Sec-Grp"].id}
          protocol: TCP
          direction: inbound
        - name: oc-db-fw-ssh
          access: Allow
          source: ANY
          service: SSH
          direction: inbound
  Cloud_NSX_Gateway_1:
    type: Cloud.NSX.Gateway
    properties:
      name: oc-web-gw
      networks:
        - ${resource["OC-Web-Cloud-Seg"].id}
  OC-Cloud-LB:
    type: Cloud.NSX.LoadBalancer
    properties:
      count: ${input.frontendcount >= 2 ? 1:0}
      name: oc-lb
      type: SMALL
      routes:
        - protocol: HTTP
          port: 80
          instanceProtocol: HTTP
          instancePort: 80
          algorithm: ROUND_ROBIN
      network: ${resource["OC-Web-Cloud-Seg"].id}
      instances: ${resource.frontend[*].id}
      gateway: ${resource.Cloud_NSX_Gateway_1.id}
  frontend:
    type: Cloud.vSphere.Machine
    dependsOn:
      - mysql
    properties:
      agent: ${input.osMonitoring == true ? "telegraf" :""}
      service: apache
      name: oc-web
      flavor: small
      count: ${input.frontendcount}
      image: ubuntu-18.04
      #imageRef: https://cloud-images.ubuntu.com/releases/18.04/release/ubuntu-18.04-server-cloudimg-amd64.ova
      tags: ${input.tagsOptional + input.tagsRequired + [{'key':'cost_center','value':input.costCenter},{'key':'project','value':env.projectName}]}
      remoteAccess:
        authentication: usernamePassword
        username: ${input.username}
        password: ${input.password}
      networks:
        - network: ${resource.OC-Web-Cloud-Seg.id}
          assignment: static
          domain: showcase.tmm.broadcom.lab
          dns:
            - 10.138.241.1
            - 10.138.241.2
      cloudConfig: |
        hostname: ${self.resourceName}
        package_upgrade: true
        package_reboot_if_required: true
        apt_source:
          - source: deb http://archive.ubuntu.com/ubuntu main universe multiverse restricted

        packages:
          - apache2
          - php
          - php-mysql
          - libapache2-mod-php
          - php-cli
          - php-common
          - php-intl
          - php-gd
          - php-mbstring
          - php-xml
          - php-zip
          - php-curl
          - php-xmlrpc
          - mysql-server-5.7
          - unzip
          - open-vm-tools

        ssh_pwauth: true

        users:
          - name: ${input.username}
            lock_passwd: false
            sudo: ALL=(ALL) NOPASSWD:ALL
            groups: [sudo]
            shell: /bin/bash
          
          - name: ocuser
            lock_passwd: false
            sudo: ALL=(ALL) NOPASSWD:ALL
            groups: [wheel, sudo, admin]
            shell: /bin/bash

        chpasswd:
          users:
            - name: ${input.username}
              password: ${input.password}
              type: text
          expire: false

        write_files:
          - path: /etc/cron.hourly/oc_web_cleanup
            owner: root
            permissions: '0777'
            content: "mysql -u ocuser -h ${resource.mysql.address} -e 'source /var/www/opencart/install/opencart.sql'"
            
          - path: /etc/hosts
            content: |
              127.0.0.1 ${self.resourceName}
            append: true

        runcmd:
          - systemctl stop apache2
          - USER=ocuser
          - PASS=${input.password}
            #----------------------- Install Packages if not already installed  -------------------------#
          #- systemctl list-units --type=service | grep apache2.service || apt-get install -y apache2 php php-mysql libapache2-mod-php php-cli php-common php-intl php-gd php-mbstring php-xml php-zip php-curl php-xmlrpc mysql-server-5.7 unzip open-vm-tools
          - wget -P /tmp/ http://lvn-sc-www.showcase.tmm.broadcom.lab/downloads/opencart-demo.zip
          - unzip -d /tmp /tmp/opencart-demo.zip
          - mv /tmp/opencart-demo-master/ /var/www/opencart
          - chown -R www-data.www-data /var/www/opencart
          - chmod -R 775 /var/www/opencart
          - tee /etc/apache2/sites-available/opencart.conf > /dev/null << EOF
          - <VirtualHost *:80>
          -   ServerName www.opencart.cmbu.local
          -   DocumentRoot /var/www/opencart
          -   <Directory /var/www/opencart/>
          -     AllowOverride All
          -     allow from all
          -   </Directory>
          - </VirtualHost>
          - EOF
          - cd /etc/apache2/sites-available/
          - a2ensite opencart.conf
          - a2dissite 000-default.conf
          #- systemctl reload apache2
          #- systemctl restart apache2
          - echo "[client]" >> /etc/mysql/mysql.conf.d/mysqld.cnf
          - echo "user=ocuser" >> /etc/mysql/mysql.conf.d/mysqld.cnf
          - echo "password=$PASS" >> /etc/mysql/mysql.conf.d/mysqld.cnf
          
            #----------------------- Set Website IP Address -----------------------#
          - export onpremip=$(ip route get 8.8.8.8 | awk -F"src " 'NR==1{split($2,a," ");print a[1]}')
          - mysqlip=${resource.mysql.networks[0].address}
          - export ip4=${"$onpremip"}
            #----------------------------------------------------------------------#
          
          - mysql -u $USER -h $mysqlip -e 'source /var/www/opencart/install/opencart.sql'
          - mysql -u $USER -h $mysqlip -e "INSERT INTO oc_user (user_id,user_group_id,username,password,salt,firstname,lastname,email,image,code,ip,status,date_added) VALUES (1,1,'admin','5feaa046f6927df3d744007ec1491dba838f672e','c4wnfrq9J','demo','user','admin@admin.com','none','none','none',1,'2019-01-31 06:29:09')" opencart
          - sed -i "s/frontendiphere/$ip4/g" /var/www/opencart/config.php
          - sed -i "s/dbiphere/$mysqlip/g" /var/www/opencart/config.php
          - sed -i "s/usernamehere/$USER/g" /var/www/opencart/config.php
          - sed -i "s/passwordhere/$PASS/g" /var/www/opencart/config.php
          - sed -i "s/frontendiphere/$ip4/g" /var/www/opencart/admin/config.php
          - sed -i "s/dbiphere/$mysqlip/g" /var/www/opencart/admin/config.php
          - sed -i "s/usernamehere/$USER/g" /var/www/opencart/admin/config.php
          - sed -i "s/passwordhere/$PASS/g" /var/www/opencart/admin/config.php
          - systemctl reload apache2
          - systemctl restart apache2
            #----------------------- Install Aria Logs Agent  -------------------------#
          - cd /tmp
          - wget http://lvn-sc-www.showcase.tmm.broadcom.lab/downloads/vmware-log-insight-agent_8.14.0-22552671_all.deb
          - dpkg -i vmware-log-insight-agent_8.14.0-22552671_all.deb
          - export logs_ip=${input.env == "env:vcf" ? "lvn-m01-logs.showcase.tmm.broadcom.lab" : "LOGINSIGHT"}
          - sed -i "s/;hostname=OPERATIONS_FOR_LOGS/hostname=$logs_ip/g" /var/lib/loginsight-agent/liagent.ini
          - sed -i "s/;ssl=yes/ssl=no/g" /var/lib/loginsight-agent/liagent.ini
          - systemctl restart liagentd
          - systemctl enable liagentd
            #----------------------------------------------------------------------#
          - echo 'Cloud-init is done!' >> /tmp/finished.txt
      constraints:
        - tag: ${input.env}
  mysql:
    type: Cloud.vSphere.Machine
    properties:
      agent: ${input.osMonitoring == true ? "telegraf" :""}
      service: mysql
      name: oc-db
      flavor: small
      image: ubuntu-18.04
      tags: ${input.tagsOptional + input.tagsRequired + [{'key':'cost_center','value':input.costCenter},{'key':'project','value':env.projectName}]}
      remoteAccess:
        authentication: usernamePassword
        username: ${input.username}
        password: ${input.password}
      networks:
        - network: ${resource.OC-DB-Cloud-Seg.id}
          assignment: static
          domain: showcase.tmm.broadcom.lab
          dns:
            - 10.138.241.1
            - 10.138.241.2
      cloudConfig: |
        hostname: ${self.resourceName}
        package_upgrade: true
        package_reboot_if_required: true
        apt_source:
          - source: deb http://archive.ubuntu.com/ubuntu main universe multiverse restricted

        packages:
          - mysql-server-5.7
          - mysql-client
          - unzip
          - open-vm-tools

        ssh_pwauth: true

        users:
          - name: ${input.username}
            lock_passwd: false
            sudo: ALL=(ALL) NOPASSWD:ALL
            groups: wheel, sudo, admin
            shell: /bin/bash
          - name: ocuser
            lock_passwd: false
            sudo: ALL=(ALL) NOPASSWD:ALL
            groups: wheel, sudo, admin
            shell: /bin/bash

        chpasswd:
          expire: false
          users:
            - name: ${input.username}
              password: ${input.password}
              type: text
            - name: ocuser
              password: ${input.password}
              type: text

        write_files:
          - path: /etc/cron.hourly/oc_cleanup
            owner: root
            permissions: '0777'
            content: "mysql -e 'use opencart; create table oc_session_copy like oc_session; drop table oc_session; rename table oc_session_copy to oc_session;'"
          
          - path: /etc/hosts
            content: |
              127.0.0.1 ${self.resourceName}
            append: true

        runcmd:
          - export DEBIAN_FRONTEND=noninteractive
          - USER=ocuser
          - PASS=${input.password}
          #- echo $USER:$PASS | /usr/sbin/chpasswd
          #- echo ${input.username}:$PASS | /usr/sbin/chpasswd
          #- sed -i "s/PasswordAuthentication no/PasswordAuthentication yes/g" /etc/ssh/sshd_config
          #- service ssh reload
          #- hostnamectl set-hostname ${self.resourceName}
            #----------------------- Install SQL Server if not already installed  -------------------------#
          - systemctl list-units --type=service | grep mysql.service || apt-get install -y mysql-server-5.7 mysql-client unzip open-vm-tools
          - echo "mysql-server-5.7 mysql-server/root_password password root" | sudo debconf-set-selections
          - echo "mysql-server-5.7 mysql-server/root_password_again password root" | sudo debconf-set-selections
          - echo "[client]" >> /etc/mysql/mysql.conf.d/mysqld.cnf
          - echo "user=root" >> /etc/mysql/mysql.conf.d/mysqld.cnf
          - echo "password=root" >> /etc/mysql/mysql.conf.d/mysqld.cnf
          - echo "user=ocuser" >> /etc/mysql/mysql.conf.d/mysqld.cnf
          - echo "password=$PASS" >> /etc/mysql/mysql.conf.d/mysqld.cnf
          - sed -i 's/#slow/slow/g' /etc/mysql/mysql.conf.d/mysqld.cnf
          - sed -i 's/#long_query_time/long_query_time/g' /etc/mysql/mysql.conf.d/mysqld.cnf
          - sed -i 's/bind-address/#bind-address/g' /etc/mysql/mysql.conf.d/mysqld.cnf
          - systemctl restart mysql
          - mysql -u root -e "GRANT ALL ON *.* TO '$USER'@'%' IDENTIFIED BY '$PASS'"
          - mysql -u root -e 'CREATE DATABASE opencart'
          - mysql -u root -e 'USE opencart'
          - mysql -u root -e 'flush privileges'
            #----------------------- Install Aria Logs Agent  -------------------------#
          - cd /tmp
          - wget http://lvn-sc-www.showcase.tmm.broadcom.lab/downloads/vmware-log-insight-agent_8.14.0-22552671_all.deb
          - dpkg -i vmware-log-insight-agent_8.14.0-22552671_all.deb
          - export logs_ip=${input.env == "env:vcf" ? "lvn-m01-logs.showcase.tmm.broadcom.lab" : "LOGINSIGHT"}
          - sed -i "s/;hostname=OPERATIONS_FOR_LOGS/hostname=$logs_ip/g" /var/lib/loginsight-agent/liagent.ini
          - sed -i "s/;ssl=yes/ssl=no/g" /var/lib/loginsight-agent/liagent.ini
          - systemctl restart liagentd
          - systemctl enable liagentd
            #----------------------------------------------------------------------#
          - echo 'Cloud-init is done!' >> /tmp/finished.txt
      constraints:
        - tag: ${input.env}
  OC-Web-Cloud-Seg:
    type: Cloud.NSX.Network
    properties:
      name: oc-web-net
      networkType: routed
      constraints:
        - tag: env:moad-nsx-web
  Cloud_NSX_Gateway_2: # Only being used so T1 gateway has a differnt name otherwise it will have the same name as the db netwwork
    type: Cloud.NSX.Gateway
    properties:
      name: oc-db-gw
      networks:
        - ${resource["OC-DB-Cloud-Seg"].id}
  OC-DB-Cloud-Seg:
    type: Cloud.NSX.Network
    properties:
      name: oc-db-net
      networkType: routed
      constraints:
        - tag: env:moad-nsx-db
