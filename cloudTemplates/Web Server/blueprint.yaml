formatVersion: 1
name: Web Servers
version: 2
inputs:
  username:
    type: string
    title: Username
    description: Create a username
    default: demouser
  password:
    type: string
    title: Password
    default: VMware1!
    encrypted: true
    description: Set a password for the username
  count:
    type: integer
    title: How many servers ?
    default: 1
    description: How many servers should be deployed?
  env:
    type: string
    title: Deployment Environment
    default: env:vcf
    oneOf:
      - title: VCF
        const: env:vcf
      - title: PAI
        const: env:pai
      - title: SA
        const: env:sa
  net:
    type: string
    title: Network Type
    description: Select a network type to deploy the web servers on.
    default: env:vcf
    oneOf:
      - title: Existing Network
        const: env:vcf
      - title: On-Demand Network
        const: env:moad-nsx-web
  osMonitoring:
    type: boolean
    title: Enable OS/APP Monitoring
    description: Installs the Telegraf Agent and monitors both DB and Web Apps
    default: true
resources:
  Web_Server:
    type: Cloud.vSphere.Machine
    properties:
      agent: ${input.osMonitoring == true ? "telegraf" :""}
      service: apache
      name: web
      count: ${input.count}
      flavor: small
      image: ubuntu-18.04
      remoteAccess:
        authentication: usernamePassword
        username: ${input.username}
        password: ${input.password}
      constraints:
        - tag: ${input.env}
      cloudConfig: |
        hostname: ${self.resourceName}
        manage_resolv_conf: true

        resolv_conf:
          nameservers: ['10.138.241.1', '10.138.241.2']
          searchdomains:
            - showcase.tmm.broadcom.lab
          domain: showcase.tmm.broadcom.lab
          options:
            rotate: true
            timeout: 1

        package_upgrade: true
        package_reboot_if_required: true
        apt_source:
          - source: deb http://archive.ubuntu.com/ubuntu main universe multiverse restricted

        packages:
          - apache2
          - open-vm-tools

        ssh_pwauth: yes

        users:
          - default
          - name: ${input.username}
            lock_passwd: false
            sudo: ALL=(ALL) NOPASSWD:ALL
            groups: wheel, sudo, admin
            shell: /bin/bash

        chpasswd:
          users:
            - name: ${input.username}
              password: ${input.password}
              type: text
          expire: false

        runcmd:
          ### adds the ssh user to sudoers
          #- echo "Defaults:${input.username}  !requiretty" >> /etc/sudoers.d/${input.username}
          ### update the top of the web page to the web servers resource name
          - sed -i 's/Apache2 Ubuntu Default Page/${self.resourceName}/g' /var/www/html/index.html
          
          ### Restart services
          - systemctl reload apache2
          - systemctl restart apache2
          
          #----------------------- Get Shopping Cart  -------------------------#
          - wget -P /tmp/ http://lvn-sc-www.showcase.tmm.broadcom.lab/downloads/opencart-demo.zip
          - unzip -d /tmp /tmp/opencart-demo.zip
          - mv /tmp/opencart-demo-master/ /var/www/opencart
          - chown -R www-data.www-data /var/www/opencart
          
          #----------------------- Install Aria Logs Agent  -------------------------#
          - cd /tmp
          - wget http://lvn-sc-www.showcase.tmm.broadcom.lab/downloads/vmware-log-insight-agent_8.14.0-22552671_all.deb
          - dpkg -i vmware-log-insight-agent_8.14.0-22552671_all.deb
          - export logs_ip=${input.env == "env:vcf" ? "lvn-m01-logs.showcase.tmm.broadcom.lab" : "LOGINSIGHT"}
          
          ### Log completion
          - echo 'Cloud-init is done!' >> /tmp/finished.txt
      networks:
        - network: ${resource.Web_Network.id}
          assignment: static
  Web_Network:
    type: Cloud.NSX.Network
    properties:
      name: web-net
      networkType: ${input.net == "env:vcf" ? "existing" :"routed"}
      constraints:
        - tag: ${input.net}
